nyears = 2004-1980
nyears
nyears = 2004-1980+1
WORKSTATION = 1
# 0.1 SET WORKING DIRECTORY WHERE DATA IS SAVED
if(WORKSTATION == 1){
root <- '/Volumes/GoogleDrive/My Drive/Phd_Dissertation/ideal-happiness/'
}
source(file=paste(root,"Functions/empirical_spacetime_covariance.R",sep=''))
source(file=paste(root,"Functions/data_format.R",sep=''))
setwd(paste(root,'Figures',sep=''))
############################################################################
############################################################################
###################           REAL DATA ANALYSIS         ###################
############################################################################
############################################################################
load(paste(root,'Data/UTM_simulated_locations_only.RData',sep=''))
load(paste(root,'Data/simulated_locations_only.RData',sep=''))
# You can use raw netcdf data and pre-process it using preprocessing.R or you load this already preprocessed data
#we use only 25 years of data: 1980-2004 of January
insample_loc_index <- 1:80
nyears = 2004-1980+1
ndays = 31
nhours = 8
data_matrix <- data_format_into_matrix(data1 = u[pts,], data2 = v[pts,], temporal_replicates = nyears*ndays*nhours, simulated = F)
dim(data_matrix)
nyears*ndays*nhours
var1_cov <- empirical_st_cov(data1 = t(data_matrix[insample_loc_index,1:(nrow(data_matrix)/2)]), cross = F, locations = grid_locations_UTM[pts[insample_loc_index],], max_time_lag = 5)
var2_cov <- empirical_st_cov(data1 = t(data_matrix[insample_loc_index,(nrow(data_matrix)/2+1):nrow(data_matrix)]), cross = F, locations = grid_locations_UTM[pts[insample_loc_index],], max_time_lag = 5)
cross <- empirical_st_cov(data1 = t(data_matrix[insample_loc_index,1:(nrow(data_matrix)/2)]), data2 = t(data_matrix[insample_loc_index,(nrow(data_matrix)/2+1):nrow(data_matrix)]), cross = T, locations = grid_locations_UTM[pts[insample_loc_index],], max_time_lag = 5)
binned <- empirical_covariance_dataframe(data1_cov = var1_cov, data2_cov = var2_cov, cross_cov = cross)
source(file=paste(root,"Functions/load_packages.R",sep=''))
binned <- empirical_covariance_dataframe(data1_cov = var1_cov, data2_cov = var2_cov, cross_cov = cross)
cross
binned <- empirical_covariance_dataframe(data1_cov = var1_cov, data2_cov = var2_cov, cross_cov = cross)
var1_cov
var1_cov[[1]]
data1_cov = var1_cov
cross_cov = cross
data2_cov = var2_cov
empirical_var1 <- data1_cov[[1]]
empirical_var2 <- data2_cov[[1]]
empirical_var3 <- cross_cov[[1]]
binned.1 <- empirical_var1 %>% group_by(xlag,ylag) %>% summarize(avg1=mean(correlation))
binned.2 <- empirical_var2 %>% group_by(xlag,ylag) %>% summarize(avg1=mean(correlation))
binned.3 <- empirical_var3 %>% group_by(xlag,ylag) %>% summarize(avg1=mean(correlation))
head(cross_cov[[1]])
source(file=paste(root,"Functions/empirical_spacetime_covariance.R",sep=''))
binned <- empirical_covariance_dataframe(data1_cov = var1_cov, data2_cov = var2_cov, cross_cov = cross)
empirical_covariance_dataframe <- function(data1_cov, data2_cov, cross_cov){
empirical_var1 <- data1_cov[[1]]
empirical_var2 <- data2_cov[[1]]
empirical_var3 <- cross_cov[[1]]
binned.1 <- empirical_var1 %>% group_by(xlag,ylag) %>% summarize(avg1=mean(correlation))
binned.2 <- empirical_var2 %>% group_by(xlag,ylag) %>% summarize(avg1=mean(correlation))
binned.3 <- empirical_var3 %>% group_by(xlag,ylag) %>% summarize(avg1=mean(cross-correlation))
binned_orig <- cbind(binned.1$xlag,binned.1$ylag,rep(0,nrow(binned.1)),binned.1$avg1,
binned.2$avg1,binned.3$avg1)
dist0 <- sqrt(binned_orig[,1]^2+binned_orig[,2]^2)/1000
for (i in 2:6){
empirical_var1 <- data1_cov[[i]]
empirical_var2 <- data2_cov[[i]]
empirical_var3 <- cross_cov[[i]]
binned.1 <- empirical_var1 %>% group_by(xlag,ylag) %>% summarize(avg1=mean(correlation))
binned.2 <- empirical_var2 %>% group_by(xlag,ylag) %>% summarize(avg1=mean(correlation))
binned.3 <- empirical_var3 %>% group_by(xlag,ylag) %>% summarize(avg1=mean(cross-correlation))
binned_orig <- rbind(binned_orig,cbind(binned.1$xlag,binned.1$ylag,rep(i-1,nrow(binned.1)),binned.1$avg1,
binned.2$avg1,binned.3$avg1))
}
colnames(binned_orig) <- c('xlag', 'ylag', 'timelag', 'var1_cor', 'var2_cor', 'cross_cor')
return(binned_orig)
}
binned <- empirical_covariance_dataframe(data1_cov = var1_cov, data2_cov = var2_cov, cross_cov = cross)
source(file=paste(root,"Functions/empirical_spacetime_covariance.R",sep=''))
binned <- empirical_covariance_dataframe(data1_cov = var1_cov, data2_cov = var2_cov, cross_cov = cross)
empirical_var1 <- data1_cov[[1]]
empirical_var2 <- data2_cov[[1]]
empirical_var3 <- cross_cov[[1]]
binned.1 <- empirical_var1 %>% group_by(xlag,ylag) %>% summarize(avg1=mean(correlation))
binned.2 <- empirical_var2 %>% group_by(xlag,ylag) %>% summarize(avg1=mean(correlation))
binned.3 <- empirical_var3 %>% group_by(xlag,ylag) %>% summarize(avg1=mean(cross-correlation))
cross_cov[[1]]
mean(cross-correlation)
empirical_st_cov <- function( data1, data2 = NULL, cross, locations, max_time_lag ){
# input: data matrix with temporal replicates as rows and each column represents the locations
# cross: TRUE or FALSE
# output: correlation
mean = colMeans(data1)
scov = matrix(c(0), ncol(data1), ncol(data1))
n_stations = ncol(data1)
emp <- list()
if(!cross == TRUE){
for(tau in 0:max_time_lag){
for(i in (tau+1):(nrow(data1)-tau)){
scov = scov + (data1[i,] - mean)%*%t(data1[i+tau,] - mean)
}
scov = scov/(nrow(data1) - tau)
sd = apply(data1, 2, sd)
Dz = sd*diag(n_stations)
scor = solve(Dz)%*%scov%*%solve(Dz)
## Arrange the empirical covariance values in one dataframe/matrix.
loc <- 1
xlag <- locations[loc,1]-locations[,1]
ylag <- locations[loc,2]-locations[,2]
emp_vals <- scor[,loc]
for(loc in 2:ncol(data1)){
xlag <- c(xlag, locations[loc,1] - locations[,1])
ylag <- c(ylag, locations[loc,2] - locations[,2])
emp_vals <- c(emp_vals,scor[,loc])
}
emp_temp <- data.frame(xlag,ylag,emp_vals)
colnames(emp_temp) <- c('xlag', 'ylag', 'correlation')
emp[[tau+1]] <- emp_temp
}
}else{
for(tau in 0:max_time_lag){
mean2 = colMeans(data2)
for(i in (tau+1):(nrow(data1)-tau)){
scov = scov + (data1[i,] - mean)%*%t(data2[i+tau,] - mean2)
}
scov = scov/(nrow(data1) - tau)
sd = apply(data1, 2, sd)
sd2 = apply(data2, 2, sd)
Dz = sd*diag(n_stations)
Dz2 = sd2*diag(n_stations)
scor = solve(Dz)%*%scov%*%solve(Dz2)
## Arrange the empirical covariance values in one dataframe/matrix.
loc <- 1
xlag <- locations[loc,1]-locations[,1]
ylag <- locations[loc,2]-locations[,2]
emp_vals <- scor[,loc]
for(loc in 2:ncol(data1)){
xlag <- c(xlag, locations[loc,1] - locations[,1])
ylag <- c(ylag, locations[loc,2] - locations[,2])
emp_vals <- c(emp_vals,scor[,loc])
}
emp_temp <- data.frame(xlag,ylag,emp_vals)
colnames(emp_temp) <- c('xlag', 'ylag', 'crosscorrelation')
emp[[tau+1]] <- emp_temp
}
}
return(emp)
}
empirical_covariance_dataframe <- function(data1_cov, data2_cov, cross_cov){
empirical_var1 <- data1_cov[[1]]
empirical_var2 <- data2_cov[[1]]
empirical_var3 <- cross_cov[[1]]
binned.1 <- empirical_var1 %>% group_by(xlag,ylag) %>% summarize(avg1=mean(correlation))
binned.2 <- empirical_var2 %>% group_by(xlag,ylag) %>% summarize(avg1=mean(correlation))
binned.3 <- empirical_var3 %>% group_by(xlag,ylag) %>% summarize(avg1=mean(crosscorrelation))
binned_orig <- cbind(binned.1$xlag,binned.1$ylag,rep(0,nrow(binned.1)),binned.1$avg1,
binned.2$avg1,binned.3$avg1)
dist0 <- sqrt(binned_orig[,1]^2+binned_orig[,2]^2)/1000
for (i in 2:6){
empirical_var1 <- data1_cov[[i]]
empirical_var2 <- data2_cov[[i]]
empirical_var3 <- cross_cov[[i]]
binned.1 <- empirical_var1 %>% group_by(xlag,ylag) %>% summarize(avg1=mean(correlation))
binned.2 <- empirical_var2 %>% group_by(xlag,ylag) %>% summarize(avg1=mean(correlation))
binned.3 <- empirical_var3 %>% group_by(xlag,ylag) %>% summarize(avg1=mean(cross-correlation))
binned_orig <- rbind(binned_orig,cbind(binned.1$xlag,binned.1$ylag,rep(i-1,nrow(binned.1)),binned.1$avg1,
binned.2$avg1,binned.3$avg1))
}
colnames(binned_orig) <- c('xlag', 'ylag', 'timelag', 'var1_cor', 'var2_cor', 'cross_cor')
return(binned_orig)
}
var1_cov <- empirical_st_cov(data1 = t(data_matrix[insample_loc_index,1:(nrow(data_matrix)/2)]), cross = F, locations = grid_locations_UTM[pts[insample_loc_index],], max_time_lag = 5)
var2_cov <- empirical_st_cov(data1 = t(data_matrix[insample_loc_index,(nrow(data_matrix)/2+1):nrow(data_matrix)]), cross = F, locations = grid_locations_UTM[pts[insample_loc_index],], max_time_lag = 5)
cross <- empirical_st_cov(data1 = t(data_matrix[insample_loc_index,1:(nrow(data_matrix)/2)]), data2 = t(data_matrix[insample_loc_index,(nrow(data_matrix)/2+1):nrow(data_matrix)]), cross = T, locations = grid_locations_UTM[pts[insample_loc_index],], max_time_lag = 5)
head(cross[[1]])
empirical_covariance_dataframe <- function(data1_cov, data2_cov, cross_cov){
empirical_var1 <- data1_cov[[1]]
empirical_var2 <- data2_cov[[1]]
empirical_var3 <- cross_cov[[1]]
binned.1 <- empirical_var1 %>% group_by(xlag,ylag) %>% summarize(avg1=mean(correlation))
binned.2 <- empirical_var2 %>% group_by(xlag,ylag) %>% summarize(avg1=mean(correlation))
binned.3 <- empirical_var3 %>% group_by(xlag,ylag) %>% summarize(avg1=mean(crosscorrelation))
binned_orig <- cbind(binned.1$xlag,binned.1$ylag,rep(0,nrow(binned.1)),binned.1$avg1,
binned.2$avg1,binned.3$avg1)
dist0 <- sqrt(binned_orig[,1]^2+binned_orig[,2]^2)/1000
for (i in 2:6){
empirical_var1 <- data1_cov[[i]]
empirical_var2 <- data2_cov[[i]]
empirical_var3 <- cross_cov[[i]]
binned.1 <- empirical_var1 %>% group_by(xlag,ylag) %>% summarize(avg1=mean(correlation))
binned.2 <- empirical_var2 %>% group_by(xlag,ylag) %>% summarize(avg1=mean(correlation))
binned.3 <- empirical_var3 %>% group_by(xlag,ylag) %>% summarize(avg1=mean(crosscorrelation))
binned_orig <- rbind(binned_orig,cbind(binned.1$xlag,binned.1$ylag,rep(i-1,nrow(binned.1)),binned.1$avg1,
binned.2$avg1,binned.3$avg1))
}
colnames(binned_orig) <- c('xlag', 'ylag', 'timelag', 'var1_cor', 'var2_cor', 'cross_cor')
return(binned_orig)
}
cross <- empirical_st_cov(data1 = t(data_matrix[insample_loc_index,1:(nrow(data_matrix)/2)]), data2 = t(data_matrix[insample_loc_index,(nrow(data_matrix)/2+1):nrow(data_matrix)]), cross = T, locations = grid_locations_UTM[pts[insample_loc_index],], max_time_lag = 5)
binned <- empirical_covariance_dataframe(data1_cov = var1_cov, data2_cov = var2_cov, cross_cov = cross)
binned
binned_orig[which(binned_orig[,3]==0),]
hlag <- binned[which(binned[,3]==0),]
hlag
hlag <- sqrt(binned[which(binned[,3]==0),1]^2 + binned[which(binned[,3]==0),2]^2)
hlag
plot(hlag, binned[which(binned[,3]==0),4], pch=3, ylab='', col=1,xlab='Spatial Lag (km)', main='', col.main= "#4EC1DE",ylim=c(0,1))
plot(hlag/1000, binned[which(binned[,3]==0),4], pch=3, ylab='', col=1,xlab='Spatial Lag (km)', main='', col.main= "#4EC1DE",ylim=c(0,1))
WORKSTATION = 3
# 0.1 SET WORKING DIRECTORY WHERE DATA IS SAVED
if(WORKSTATION == 1){
root <- '/Volumes/GoogleDrive/My Drive/Summer 2017_2018/Project 1/'
}else if (WORKSTATION == 2){
root <- 'G://My Drive/Summer 2017_2018/Project 1/'
}else{
root <- '/Users/salvanmo/silver-octo-spork/'
}
source(file=paste(root,"/empirical_st_cov.R",sep=''))
aggs_max <- 1 #the number of consecutive timesteps you want to average. Here we take the data as is and do not take averages since they are already Gaussian and stationary
#we use only 25 years of data: 1980-2004.
ave_u <- ave_v <- matrix(,ncol=floor(25*31*8/aggs_max),nrow=100)
for(locat in 1:100){
new_uu <- new_uu2 <- matrix(,ncol=floor(25*31*8/aggs_max),nrow=aggs_max)
for(gg in 1:floor(25*31*8/aggs_max)){
new_uu[,gg] <- u[pts[locat],((gg-1)*aggs_max+1):(gg*aggs_max)]
new_uu2[,gg] <- v[pts[locat],((gg-1)*aggs_max+1):(gg*aggs_max)]
}
ave_u[locat,]<- colMeans(new_uu)
ave_v[locat,]<- colMeans(new_uu2)
}
var1_cov <- empirical_st_cov_UTM(t(ave_u[1:80,]))  ##this is coded for u=0:5
var2_cov <- empirical_st_cov_UTM(t(ave_v[1:80,]))
cross <- empirical_st_cov_cross_UTM(t(ave_u[1:80,]),t(ave_v[1:80,]))
empirical_var1 <- var1_cov[[1]]
colnames(empirical_var1) <- c('x','y','var1','x_old','y_old')
empirical_var2 <- var2_cov[[1]]
colnames(empirical_var2) <- c('x','y','var2','x_old','y_old')
empirical_var3 <- cross[[1]]
colnames(empirical_var3) <- c('x','y','var3','x_old','y_old')
binned.1 <- empirical_var1 %>% group_by(x,y) %>% summarize(avg1=mean(var1))
binned.2 <- empirical_var2 %>% group_by(x,y) %>% summarize(avg1=mean(var2))
binned.3 <- empirical_var3 %>% group_by(x,y) %>% summarize(avg1=mean(var3))
binned_orig <- cbind(binned.1$x,binned.1$y,rep(0,nrow(binned.1)),binned.1$avg1,
binned.2$avg1,binned.3$avg1)
dist0 <- sqrt(binned_orig[,1]^2+binned_orig[,2]^2)/1000
for (i in 2:6){
empirical_var1 <- var1_cov[[i]]
colnames(empirical_var1) <- c('x','y','var1','x_old','y_old')
empirical_var2 <- var2_cov[[i]]
colnames(empirical_var2) <- c('x','y','var2','x_old','y_old')
empirical_var3 <- cross[[i]]
colnames(empirical_var3) <- c('x','y','var3','x_old','y_old')
binned.1 <- empirical_var1 %>% group_by(x,y) %>% summarize(avg1=mean(var1))
binned.2 <- empirical_var2 %>% group_by(x,y) %>% summarize(avg1=mean(var2))
binned.3 <- empirical_var3 %>% group_by(x,y) %>% summarize(avg1=mean(var3))
binned_orig <- rbind(binned_orig,cbind(binned.1$x,binned.1$y,rep(i-1,nrow(binned.1)),binned.1$avg1,
binned.2$avg1,binned.3$avg1))
}
binned0 <- cbind(dist0,binned_orig[which(binned_orig[,3]==0),4],
binned_orig[which(binned_orig[,3]==0),5],
binned_orig[which(binned_orig[,3]==0),6],
binned_orig[which(binned_orig[,3]==0),1],
binned_orig[which(binned_orig[,3]==0),2])
binned_orig2_0 <- binned_orig[which(binned_orig[,3]==0),]
binned_orig2_orig <- binned_orig[which(binned_orig[,3]<=1),]
binned_orig2_0 <- binned_orig[which(binned_orig[,3]==0),]
binned_orig2 <- binned_orig[which(binned_orig[,3]==1),]
plot(dist0,binned0[,4],pch=3,ylab='', col=1,xlab='Spatial Lag (km)',
main='', col.main= "#4EC1DE",ylim=c(0,1))
binned0
binned[which(binned[,3]==0),4]
binned[which(binned[,3]==0),4][1:10]
binned0
binned0
binned[which(binned[,3]==0),4][1:10]
binned0[1:10,4]
data_matrix
insample_loc_index
pts
data_matrix
data_matrix[,1]
dim(ave_u)
data_matrix[,1]
ave_u[,1]
dim(data_matrix)
dim(data_matrix)/2
data_matrix[,6201]
ave_v[,1]
data_matrix[,6201]-ave_v[,1]
var1_cov <- empirical_st_cov_UTM(t(ave_u[1:80,]))  ##this is coded for u=0:5
var1_cov[[1]]
var1_cov[[1]][1:5,]
(nrow(data_matrix)/2+1):nrow(data_matrix)
(ncol(data_matrix)/2+1):ncol(data_matrix)
data_matrix <- data_format_into_matrix(data1 = u[pts,], data2 = v[pts,], temporal_replicates = nyears*ndays*nhours, simulated = F)
var1_cov <- empirical_st_cov(data1 = t(data_matrix[insample_loc_index,1:(ncol(data_matrix)/2)]), cross = F, locations = grid_locations_UTM[pts[insample_loc_index],], max_time_lag = 5)
var2_cov <- empirical_st_cov(data1 = t(data_matrix[insample_loc_index,(ncol(data_matrix)/2+1):ncol(data_matrix)]), cross = F, locations = grid_locations_UTM[pts[insample_loc_index],], max_time_lag = 5)
data_matrix <- data_format_into_matrix(data1 = u[pts,], data2 = v[pts,], temporal_replicates = nyears*ndays*nhours, simulated = F)
var1_cov <- empirical_st_cov(data1 = t(data_matrix[insample_loc_index,1:(ncol(data_matrix)/2)]), cross = F, locations = grid_locations_UTM[pts[insample_loc_index],], max_time_lag = 5)
dim(data_matrix)
dim(data_matrix[insample_loc_index,1:(ncol(data_matrix)/2)])
source(file=paste(root,"Functions/empirical_spacetime_covariance.R",sep=''))
if(WORKSTATION == 1){
root <- '/Volumes/GoogleDrive/My Drive/Phd_Dissertation/ideal-happiness/'
}
source(file=paste(root,"Functions/load_packages.R",sep=''))
source(file=paste(root,"Functions/empirical_spacetime_covariance.R",sep=''))
source(file=paste(root,"Functions/data_format.R",sep=''))
WORKSTATION = 1
# 0.1 SET WORKING DIRECTORY WHERE DATA IS SAVED
if(WORKSTATION == 1){
root <- '/Volumes/GoogleDrive/My Drive/Phd_Dissertation/ideal-happiness/'
}
source(file=paste(root,"Functions/load_packages.R",sep=''))
source(file=paste(root,"Functions/empirical_spacetime_covariance.R",sep=''))
source(file=paste(root,"Functions/data_format.R",sep=''))
var1_cov <- empirical_st_cov(data1 = t(data_matrix[insample_loc_index,1:(ncol(data_matrix)/2)]), cross = F, locations = grid_locations_UTM[pts[insample_loc_index],], max_time_lag = 5)
data_matrix <- data_format_into_matrix(data1 = u[pts,], data2 = v[pts,], temporal_replicates = nyears*ndays*nhours, simulated = F)
var1_cov <- empirical_st_cov(data1 = t(data_matrix[insample_loc_index,1:(ncol(data_matrix)/2)]), cross = F, locations = grid_locations_UTM[pts[insample_loc_index],], max_time_lag = 5)
var2_cov <- empirical_st_cov(data1 = t(data_matrix[insample_loc_index,(ncol(data_matrix)/2+1):ncol(data_matrix)]), cross = F, locations = grid_locations_UTM[pts[insample_loc_index],], max_time_lag = 5)
cross <- empirical_st_cov(data1 = t(data_matrix[insample_loc_index,1:(ncol(data_matrix)/2)]), data2 = t(data_matrix[insample_loc_index,(ncol(data_matrix)/2+1):ncol(data_matrix)]), cross = T, locations = grid_locations_UTM[pts[insample_loc_index],], max_time_lag = 5)
binned <- empirical_covariance_dataframe(data1_cov = var1_cov, data2_cov = var2_cov, cross_cov = cross)
hlag <- sqrt(binned[which(binned[,3]==0),1]^2 + binned[which(binned[,3]==0),2]^2)
#Check plots
plot(hlag/1000, binned[which(binned[,3]==0),4], pch=3, ylab='', col=1,xlab='Spatial Lag (km)', main='', col.main= "#4EC1DE",ylim=c(0,1))
plot(hlag/1000, binned[which(binned[,3]==0),5], pch=3, ylab='', col=1,xlab='Spatial Lag (km)', main='', col.main= "#4EC1DE",ylim=c(0,1))
plot(hlag/1000, binned[which(binned[,3]==0),6], pch=3, ylab='', col=1,xlab='Spatial Lag (km)', main='', col.main= "#4EC1DE",ylim=c(0,1))
save.image("/Volumes/GoogleDrive/My Drive/Phd_Dissertation/ideal-happiness/Project1.RData")
